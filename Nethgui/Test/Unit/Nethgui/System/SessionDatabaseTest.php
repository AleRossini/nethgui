<?php namespace Nethgui\Test\Unit\Nethgui\System;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-28 at 16:00:13.
 */
class SessionDatabaseTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Nethgui\System\SessionDatabase
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new \Nethgui\System\SessionDatabase;
        $this->object->setSession($this->getSession());
    }

    /**
     * @covers Nethgui\System\SessionDatabase::delProp
     * @todo   Implement testDelProp().
     */
    public function testDelProp()
    {
        $this->object->delProp('k', array('p1', 'p2'));
        $this->assertNull($this->object->getProp('k', 'p1'));
        $this->assertNull($this->object->getProp('k', 'p2'));
        $this->assertEquals('v3', $this->object->getProp('k', 'p3'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::deleteKey
     * @todo   Implement testDeleteKey().
     */
    public function testDeleteKey()
    {
        $this->object->deleteKey('k');
        $this->assertNull($this->object->getType('k'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getAll
     * @todo   Implement testGetAll().
     */
    public function testGetAll()
    {
        $a1 = $this->object->getAll();
        $a2 = $this->object->getAll('T');

        $this->assertEquals(array('k' => array('p1' => 'v1', 'p2' => 'v2', 'p3' => 'v3', 'type' => 'T')), $a2);
        $this->assertEquals($a1, $a2);
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getKey
     * @todo   Implement testGetKey().
     */
    public function testGetKey1()
    {
        $this->assertEquals(array('p1' => 'v1', 'p2' => 'v2', 'p3' => 'v3', 'type' => 'T'), $this->object->getKey('k'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getKey
     * @todo   Implement testGetKey().
     */
    public function testGetKey2()
    {
        $this->assertNull($this->object->getKey('Z'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getProp
     * @todo   Implement testGetProp().
     */
    public function testGetProp1()
    {
        $this->assertEquals('v1', $this->object->getProp('k', 'p1'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getProp
     * @todo   Implement testGetProp().
     */
    public function testGetProp2()
    {
        $this->assertNull($this->object->getProp('k', 'Z'));
        $this->assertNull($this->object->getProp('z', 'Z'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::getType
     * @todo   Implement testGetType().
     */
    public function testGetType()
    {
        $this->assertEquals('T', $this->object->getType('k'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::setKey
     * @todo   Implement testSetKey().
     */
    public function testSetKey()
    {
        $this->object->setKey('w', 'L', array('q1' => 'v1'));
        $this->assertEquals('L', $this->object->getType('w'));
        $this->assertEquals('v1', $this->object->getProp('w', 'q1'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::setProp
     * @todo   Implement testSetKey().
     */
    public function testSetProp1()
    {
        $this->object->setProp('w', array('a' => 'A'));
        $this->assertEquals('A', $this->object->getProp('w', 'a'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::setProp
     * @todo   Implement testSetProp().
     */
    public function testSetProp2()
    {
        $this->object->setProp('k', array('p5' => 'v5', 'p1' => 'xx'));
        $this->assertEquals(array('p1' => 'xx', 'p2' => 'v2', 'p3' => 'v3', 'p5' => 'v5', 'type' => 'T'), $this->object->getKey('k'));
    }

    /**
     * @covers Nethgui\System\SessionDatabase::setType
     * @todo   Implement testSetType().
     */
    public function testSetType()
    {
        $this->object->setType('k', 'X');
        $this->assertEquals('X', $this->object->getType('k'));
    }

    /**
     * @todo   Implement testSetSession().
     */
    public function testSetSession()
    {
        $s = $this->getSession();
        $this->assertInstanceof('Nethgui\System\SessionDatabase', $this->object->setSession($s));
    }

    private function getSession($a = array())
    {
        $a = \array_merge(array('k' => array('p1' => 'v1', 'p2' => 'v2', 'p3' => 'v3', 'type' => 'T')), $a);
        $s = new TestSession(array(get_class($this->object) => new \ArrayObject($a)));
        return $s;
    }

}

class TestSession extends \ArrayObject implements \Nethgui\Utility\SessionInterface
{

    public function login()
    {
        return $this;
    }

    public function logout()
    {
        return $this;
    }

    public function retrieve($key)
    {
        return $this->offsetGet($key);
    }

    public function store($key, \Serializable $object = NULL)
    {
        $this->offsetSet($key, $object);
        return $this;
    }

}